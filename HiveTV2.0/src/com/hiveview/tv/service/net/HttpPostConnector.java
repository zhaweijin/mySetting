package com.hiveview.tv.service.net;import java.io.InputStream;import java.io.UnsupportedEncodingException;import java.net.HttpURLConnection;import java.util.List;import org.apache.http.HttpResponse;import org.apache.http.HttpVersion;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.client.params.ClientPNames;import org.apache.http.client.params.CookiePolicy;import org.apache.http.client.params.HttpClientParams;import org.apache.http.cookie.Cookie;import org.apache.http.impl.client.DefaultHttpClient;import org.apache.http.impl.client.DefaultHttpRequestRetryHandler;import org.apache.http.params.BasicHttpParams;import org.apache.http.params.CoreProtocolPNames;import org.apache.http.params.HttpConnectionParams;import org.apache.http.params.HttpParams;import android.util.Log;import com.hiveview.reporter.NetErrorReporter;import com.hiveview.tv.common.HiveviewApplication;import com.hiveview.tv.service.exception.ServiceException;import com.hiveview.tv.service.request.BasePostRequest;import com.hiveview.tv.utils.DeviceBoxUtils;public class HttpPostConnector extends BaseHttpPostConnector {	private final int REPEATS = 3;	private final int CONNECT_TIMEOUT = 15000;	private final int READ_TIMEOUT = 15000;	private HttpPost httpPost;	private String TAG = "HttpPostConnector";	private String url;	@SuppressWarnings("unused")	private HttpPostConnector() {	}	public HttpPostConnector(BasePostRequest request) throws ServiceException {		try {			this.url = request.executeUrl();			httpPost = request.executeToEntity();		} catch (UnsupportedEncodingException e) {			throw new ServiceException();		}	}	/**	 * get data stream from net.	 * 	 * @author Arashmen	 * @throws HiveException .	 * */	public InputStream getPostResponse() {		DefaultHttpClient client = new DefaultHttpClient();		// 设置一下，否则可能从服务器端获取不Cookies		client.getParams().setParameter(CoreProtocolPNames.PROTOCOL_VERSION, HttpVersion.HTTP_1_1);		client.getParams().setParameter(ClientPNames.COOKIE_POLICY, CookiePolicy.BROWSER_COMPATIBILITY);		InputStream in = null;		client.setHttpRequestRetryHandler(new DefaultHttpRequestRetryHandler(0, false));		int count = 0;		int responseCode = -1;	//	while (count < REPEATS) {			try {				HttpParams httpParams = new BasicHttpParams();//				HttpConnectionParams.setConnectionTimeout(httpParams, CONNECT_TIMEOUT);				HttpConnectionParams.setSoTimeout(httpParams, READ_TIMEOUT);				HttpClientParams.setRedirecting(httpParams, true);				httpPost.setParams(httpParams);				String cookiesStr = HiveviewApplication.getCookie();				if (!cookiesStr.equals("")) {					httpPost.setHeader("Cookie", cookiesStr);				}				setHeader(httpPost);				HttpResponse response = client.execute(httpPost);				responseCode = response.getStatusLine().getStatusCode();				if (responseCode != HttpURLConnection.HTTP_OK){					/*start by huzuwei,添加网络请求错误上报日志*/					NetErrorReporter reporter = new NetErrorReporter(HiveviewApplication.getContext(),responseCode+"",url);					reporter.report();					/*end by huzuwei*/					throw new RuntimeException();}				// 写入新的鉴权信息				List<Cookie> cookies = client.getCookieStore().getCookies();				HiveviewApplication.saveCookie(cookies);				in = response.getEntity().getContent();				if (null == in)					throw new RuntimeException();				count = REPEATS;			} catch (Exception e) {				try {					Thread.sleep(100);				} catch (InterruptedException e1) {					throw new ServiceException(e.getLocalizedMessage(), e);				}				count++;				if (count == REPEATS) {					throw new ServiceException("Error:" + responseCode, e);				}			}		//}		return in;	}	/**	 * @Title: HttpGetConnector	 * @author:张鹏展	 * @Description: 设置httpget 请求的 header User-Agent 追加信息	 * @param mHttpGet	 */	private void setHeader(HttpPost mHttpPost){//		Log.d(TAG ,  "Apache-HttpClient/UNAVAILABLE (java 1.4)"+"&&MODEL="+DeviceUtils.getDeviceModel()//				+"&&MAC="+DeviceUtils.getMac()+"&&SN="+DeviceUtils.getSn()+"&&VERSION="+DeviceUtils.getSoftVersion());		mHttpPost.setHeader("User-Agent", "Apache-HttpClient/UNAVAILABLE (java 1.4)"+"&&MODEL="+DeviceBoxUtils.getDeviceModel()				+"&&MAC="+DeviceBoxUtils.getMac()+"&&SN="+DeviceBoxUtils.getSn()+"&&VERSION="+DeviceBoxUtils.getSoftVersion());	}}