package com.hiveview.tv.view;import java.lang.reflect.Field;import com.hiveview.tv.utils.LogUtil;import android.content.Context;import android.support.v4.view.ViewPager;import android.util.AttributeSet;import android.view.animation.AccelerateDecelerateInterpolator;import android.view.animation.Interpolator;import android.widget.Scroller;public class TvPreloadingViewPager extends ViewPager {	protected Context mContext;	protected boolean isLoading = false;	// 预加载的步长	protected int MAX_NUM = 3;	private int mDuration = 400;	private IPreLoadingListener preListener = null;	public TvPreloadingViewPager(Context context, AttributeSet attrs) {		super(context, attrs);		this.mContext = context;		init();		changeViewPageScroller();	}	public TvPreloadingViewPager(Context context) {		super(context);		this.mContext = context;		init();		changeViewPageScroller();	}	private void init() {		this.setOnPageChangeListener(new PreLoadingOnPageChangeListener());	}	public IPreLoadingListener getPreListener() {		return preListener;	}	public void setPreListener(IPreLoadingListener preListener) {		this.preListener = preListener;	}	public boolean isLoading() {		return isLoading;	}	public void setLoading(boolean isLoading) {		this.isLoading = isLoading;	}	/**	 * 预加载接口	 * 	 * @author chenlixiao	 * 	 */	public interface IPreLoadingListener {		/**		 * 请求网络数据的操作		 */		public void preLoading();		/**		 * 当ViewPager的OnPageChangeListener调用onPageSelected方法时,执行此方法，		 * 是留给外部程序要在OnPageChangeListener执行的操作		 * 		 * @param position		 */		public void onPrePageSelected(int position);	}	/**	 * 监听页数的变化，来控制是否需要预加载	 * 	 * @author chenlixiao	 * 	 */	class PreLoadingOnPageChangeListener implements OnPageChangeListener {		@Override		public void onPageScrollStateChanged(int arg0) {			/*if (null != videosPagers)				videosPagers.PagesIng(arg0);*/		}		@Override		public void onPageScrolled(int arg0, float arg1, int arg2) {			if (null != videosPagers)				videosPagers.PagesIng(arg2);		}		@Override		public void onPageSelected(int position) {			if (null != videosPagers)				videosPagers.PagesIndex(position);			if (null == preListener)				return;			LogUtil.info("position=" + position + " pageCount=" + (getAdapter().getCount() - 1) + " !isLoading=" + (!isLoading));			if (position + MAX_NUM == (getAdapter().getCount() - 1) && !isLoading && getAdapter().getCount() >= 5) {				preListener.preLoading();				isLoading = true;			}			preListener.onPrePageSelected(position);		}	}	// 反射机制 控制 viewpager滑动时间 为800	private void changeViewPageScroller() {		try {			Field mField = ViewPager.class.getDeclaredField("mScroller");			mField.setAccessible(true);			FixedSpeedScroller scroller;			scroller = new FixedSpeedScroller(mContext, new AccelerateDecelerateInterpolator());			mField.set(this, scroller);		} catch (Exception e) {		}	}	class FixedSpeedScroller extends Scroller {		public FixedSpeedScroller(Context context) {			super(context);		}		public FixedSpeedScroller(Context context, Interpolator interpolator) {			super(context, interpolator);		}		@Override		public void startScroll(int startX, int startY, int dx, int dy, int duration) {			super.startScroll(startX, startY, dx, dy, mDuration);		}		@Override		public void startScroll(int startX, int startY, int dx, int dy) {			super.startScroll(startX, startY, dx, dy, mDuration);		}		public void setmDuration(int time) {			mDuration = time;		}		public int getmDuration() {			return mDuration;		}	}	public int getmDuration() {		return mDuration;	}	/**	 * 	 * @param mDuration	 */	public void setmDuration(int mDuration) {		this.mDuration = mDuration;	};	public VideosPagers videosPagers;	public void setVideoPagers(VideosPagers videosPagers) {		this.videosPagers = videosPagers;	}	public VideosPagers getVideoPagers() {		return videosPagers;	}	/**	 * 当前的页码接口	 * 	 * @ClassName: VideosPagers	 * @Description:	 * @author: zhangpengzhan	 * @date 2014年5月29日 下午5:19:38	 * 	 */	public interface VideosPagers {		void PagesIndex(int index);		void PagesIng(int arg0);	}}